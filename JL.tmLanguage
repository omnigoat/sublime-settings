<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>jl</string>
	</array>
	<key>firstLineMatch</key>
	<string>-[*]-( Mode:)? JL -[*]-</string>
	<key>foldingStartMarker</key>
	<string>(?x)
		 /\*\*(?!\*)
		|^(?![^{]*?//|[^{]*?/\*(?!.*?\*/.*?\{)).*?\{\s*($|//|/\*(?!.*?\*/.*\S))
	</string>
	<key>foldingStopMarker</key>
	<string>(?&lt;!\*)\*\*/|^\s*\}</string>
	<key>keyEquivalent</key>
	<string>^~JL</string>
	<key>name</key>
	<string>JL</string>
	<key>scopeName</key>
	<string>source.c</string>
	<key>patterns</key>
	<array>
	
		<!--
			C++ Typename:
			(?:const\s+|volatile\s+){0,2}(::)?(?'ty'[a-zA-Z_][a-zA-Z0-9_]*)(::\g'ty')*((?:\s+(?:const\s+|volatile\s+){0,2})\s*\*)*&?
		-->
		
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.c</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.c</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.c</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_placeholder</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.c</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.c</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.c</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_escaped_char</string>
				</dict>
			</array>
		</dict>


		<dict>
			<key>name</key>
			<string>comment.c</string>
			<key>match</key>
			<string>//.*$</string>
		</dict>

		<dict>
			<key>match</key>
			<string>\b(break|case|continue|default|do|else|for|goto|if|return|switch|while)\b</string>
			<key>name</key>
			<string>keyword.control.c</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(true|false|nullptr)\b</string>
			<key>name</key>
			<string>constant.language.c</string>
		</dict>


		<!-- #define NO_PARAMETERS -->
		<dict>
			<key>name</key>
			<string>meta.preprocessor.macro.c</string>
			<key>match</key>
			<string>(?x)
				# define
				^\s*(\#)\s*(define)\s*
				# name
				([a-zA-Z_][a-zA-Z0-9_]*)\b
				# totes not a parameter
				(?!\s*\()
			</string>
			<key>captures</key>
			<dict>
				<key>1</key><dict><key>name</key><string>punctuation.definition.tag</string></dict>
				<key>2</key><dict><key>name</key><string>keyword.control</string></dict>
				<key>3</key><dict><key>name</key><string>entity.name</string></dict>
				<key>4</key><dict><key>name</key><string>punctuation.definition.open-paren</string></dict>
			</dict>
		</dict>

		<!-- #define HAS_PARAMETERS(things, things) -->
		<dict>
			<key>name</key>
			<string>meta.preprocessor.macro.c</string>
			<key>begin</key>
			<string>(?x)
				# define
				^\s*(\#)\s*(define)\s*
				# name
				([a-zA-Z_][a-zA-Z0-9_]*)\b
				# totes not a parameter
				(\s*\()
			</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key><dict><key>name</key><string>punctuation.definition.close-paren</string></dict>
				<key>1</key><dict><key>name</key><string>punctuation.definition.tag</string></dict>
				<key>2</key><dict><key>name</key><string>keyword.control</string></dict>
				<key>3</key><dict><key>name</key><string>entity.name</string></dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key><dict><key>name</key><string>punctuation.definition.close-paren</string></dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>captures</key>
					<dict>
						<key>0</key><dict><key>name</key><string>punctuation.definition.comma</string></dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>[a-zA-Z_][a-zA-Z0-9_]*</string>
					<key>captures</key>
					<dict>
						<key>0</key><dict><key>name</key><string>entity.parameter</string></dict>
					</dict>
				</dict>
			</array>
		</dict>



		<!-- #include -->
		<dict>
			<key>name</key>
			<string>meta.preprocessor.include.c</string>
			<key>begin</key>
			<string>^\s*(\#)\s*(include)\b\s+</string>
			<key>captures</key>
			<dict>
				<key>1</key><dict><key>name</key><string>punctuation.definition.tag</string></dict>
				<key>2</key><dict><key>name</key><string>keyword.control.include.c</string></dict>
			</dict>
			<key>end</key>
			<string>(?=(?://|/\*))|$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>punctuation.separator.continuation.c</string>
					<key>match</key>
					<string>(?&gt;\\\s*\n)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.double.include.c</string>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key><dict><key>name</key><string>punctuation.definition.string.begin.c</string></dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key><dict><key>name</key><string>punctuation.definition.string.end.c</string></dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>string.quoted.triangle.include.c</string>
					<key>begin</key>
					<string>&lt;</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key><dict><key>name</key><string>punctuation.definition.string.begin.c</string></dict>
					</dict>
					<key>end</key>
					<string>&gt;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key><dict><key>name</key><string>punctuation.definition.string.end.c</string></dict>
					</dict>
				</dict>
			</array>
		</dict>





		<!-- function delcaration -->
		<dict>
			<key>name</key>
			<string>meta.function.c</string>
			<key>begin</key>
			<string>(?x)
				# regular function
				(?=(::)?[a-zA-Z_]([a-zA-Z0-9_:*&amp;]|\s+(const|volatile)\b)+\s+[a-zA-Z0-9_:]+\s*\()
				|
				# constructor/destructor
				(?=(::)?(?'id'[a-zA-Z0-9_]+)(::(?'id'[a-zA-Z0-9_]+))*::~?\k'id'\s*\()
			</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<!-- between parenthesis -->
				<dict>
					<key>begin</key>
					<string>(?&lt;=[(])</string>
					<key>end</key>
					<string>(?=[)\$])</string>
					<key>patterns</key>
					<array>
						<!-- one parameter (between parenthesis and commas) -->
						<dict>
							<key>begin</key>
							<string>(?&lt;=[,(])</string>
							<key>end</key>
							<string>\s*(?=[,)\$])</string>
							<key>patterns</key>
							<array>
								<!-- (typename) (param-name) -->
								<dict>
									<key>begin</key>
									<string>(?=[a-zA-Z0-9_:*&amp;]+\s+[a-z_])</string>
									<key>end</key>
									<string>(?=[,)\$])</string>
									<key>patterns</key>
									<array>
										<!-- parameter name -->
										<dict>
											<key>name</key>
											<string>entity.parameter</string>
											<key>match</key>
											<string>(?&lt;=\s)([a-zA-Z0-9_]+)(?=\s*[,)\$])</string>
										</dict>

										<dict><key>include</key><string>#punctuation</string></dict>
										<dict><key>include</key><string>#storage-modifier</string></dict>
										<dict><key>include</key><string>#storage-type</string></dict>
									</array>
								</dict>

								<!-- punctuation for when there's no parameter name -->
								<dict><key>include</key><string>#punctuation</string></dict>
							</array>
						</dict>
						<!-- commas -->
						<dict><key>include</key><string>#punctuation</string></dict>
					</array>
				</dict>

				<!-- function name -->
				<dict>
					<key>name</key>
					<string>entity.name</string>
					<key>match</key>
					<string>(?&lt;=\s)[a-zA-Z0-9_:]+(?=\s*\()</string>
				</dict>

				<dict><key>include</key><string>#punctuation</string></dict>
				<dict><key>include</key><string>#storage-modifier</string></dict>
				<dict><key>include</key><string>#storage-type</string></dict>
			</array>
		</dict>
		
		<dict><key>include</key><string>#block-comment</string></dict>
		<dict><key>include</key><string>#punctuation</string></dict>
		<dict><key>include</key><string>#storage-modifier</string></dict>
		<dict><key>include</key><string>#storage-type</string></dict>
	</array>

	<key>repository</key>
	<dict>
		<key>storage-type</key>
		<dict>
			<key>name</key>
			<string>storage.type.c</string>
			<key>match</key>
			<string>\b(asm|__asm__|auto|bool|char|double|enum|float|int|long|short|signed|struct|typedef|union|unsigned|void)\b</string>
		</dict>
		
		<key>storage-modifier</key>
		<dict>
			<key>match</key>
			<string>\b(const|extern|register|restrict|static|volatile|inline|mutable|using)\b</string>
			<key>name</key>
			<string>storage.modifier.c</string>
		</dict>

		<key>punctuation</key>
		<dict>
			<key>name</key>
			<string>punctuation.c</string>
			<key>match</key>
			<string>::|[()&,{};.]|-&gt;</string>
		</dict>

		<key>block-comment</key>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.c</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.c</string>
		</dict>

	</dict>

	<key>uuid</key>
	<string>25066DC2-6B1D-11D9-9D5B-000D93589AF6</string>
</dict>
</plist>
 